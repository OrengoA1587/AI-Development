
// This file was auto-generated by ML.NET Model Builder. 

using SentimentModel_ConsoleApp1;
// Add input data
var sampleData = new SentimentModel.ModelInput()
{
    Col0 = "This restaurant was horrible."
};

// Load model and predict output of sample data
var result = SentimentModel.Predict(sampleData);

// If Prediction is 1, sentiment is "Positive"; otherwise, sentiment is "Negative"
var sentiment = result.PredictedLabel == 1 ? "Positive" : "Negative";
Console.WriteLine($"Text: {sampleData.Col0}\nSentiment: {sentiment}");
// Create single instance of sample data from first line of dataset for model input
//SentimentModel.ModelInput sampleData = new SentimentModel.ModelInput()
//{
//    Col0 = @"Crust is not good.",
//};

//// Make a single prediction on the sample data and print results
//var predictionResult = SentimentModel.Predict(sampleData);

//Console.WriteLine("Using model to make single prediction -- Comparing actual Col1 with predicted Col1 from sample data...\n\n");


//Console.WriteLine($"Col0: {@"Crust is not good."}");
//Console.WriteLine($"Col1: {0F}");


//Console.WriteLine($"\n\nPredicted Col1: {predictionResult.PredictedLabel}\n\n");
//Console.WriteLine("=============== End of process, hit any key to finish ===============");
//Console.ReadKey();

